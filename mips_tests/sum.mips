#! /usr/bin/env dashmips
# Support for shebang

# Sum all the numbers from 1 up to the number inputted
.data

.eqv QUIT 10

.macro exit
li $a0, 0  # set exit code
li $v0, QUIT
syscall
.end_macro

.macro print_str (%lbl)
	li $v0, 4
	la $a0, %lbl
	syscall
.end_macro

.macro create_print_str (%lbl, %str)
	.data
    %lbl: .asciiz %str
	.text
	li $v0, 4
	la $a0, %lbl
	syscall
.end_macro

.macro print_reg (%x)
    li $v0, 1
    move $a0, %x
    syscall
.end_macro

lf:     .asciiz "\n"

.text
# .globl main

main:
    create_print_str(askstr, "Number of integers (N)?  ")
    move   $t2, $zero

    # Get N from user and save
    li      $v0, 5                     # read_int syscall code = 5
    syscall
    move    $t0, $v0                   # syscall results returned in $v0

    # Initialize registers
    move    $t1, $zero                 # initialize counter (i)
    move    $t2, $zero                 # initialize sum



    loop:
        addi    $t1, $t1, 1                # i = i + 1
        add     $t2, $t2, $t1              # sum = sum + i
        beq     $t0, $t1, end_routine      # if i = N, continue
        j       loop

end_routine:
    create_print_str(sumstr, "Sum=")
    # Print sum value
    print_reg($t2)
    # Print newline
    print_str(lf)
    # Exit program
    exit
